# -*- coding: utf-8 -*-
"""Spend ML predictive Telco - Aug 2025

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bWmKvrIAs05C3G3QTHfjCNjq6rUWDVOL
"""

#code snippet 1
#installing pycaret package for ML model prediction
!pip install git+https://github.com/pycaret/pycaret.git

#code snippet 2
#inserting data from the url to initiate analisys process
import pandas as pd

df = pd.read_csv("https://raw.githubusercontent.com/Imjuandiaz/churn-data/refs/heads/main/WA_Fn-UseC_-Telco-Customer-Churn.csv")

# Convert 'TotalCharges' to numeric, coercing errors
df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')

df

#code snippet 3
#Displaying columns
df.columns

#code snippet 4
#importing regression ML pycare model
from pycaret.regression import *

# Code snippet 5
# Setting the target variable
y = 'MonthlyCharges'

# Code snippet 6
# Setting the ignored variables(noise variables, redundant variables,  variables that are missing more than 20% data etc)
ignored_cols = ['customerID', 'Churn','TotalCharges']

# Code snippet 7
# Setting the numerical variables
num_cols = ['SeniorCitizen','tenure']

# Code snippet 8
# Setting the categorical variables
cat_cols = [  'Dependents','gender',  'Partner','MultipleLines',
       'PhoneService',  'InternetService',
       'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport',
       'StreamingTV', 'StreamingMovies', 'Contract', 'PaperlessBilling',
       'PaymentMethod']

# Code snippet 9
# Setting up/configuring the pycaret setup for ML  regressionmodeling
regression_setup = setup(df,
                        target = y,
                        ignore_features = ignored_cols,
                        categorical_features = cat_cols,
                        numeric_features = num_cols, train_size = 0.7)

#code snippet 10
# Running pycaret to invoke ML algorithms
compare_models()

# Code snippet 11
# Building the model with the best algorithm
best_model = create_model('lr')

# Code snippet 12
# Predicting 'Avg Monthly Spend' on a dataset
predictions = predict_model(best_model, df)

# Code snippet 13
# Exporting predictions to a csv file
predictions.to_csv('lr telco predictions.csv')

#code snippet 14
#inserting data from the url to initiate prediction process

client_data = pd.read_csv("https://raw.githubusercontent.com/Imjuandiaz/churn-data/refs/heads/main/WA_Fn-UseC_-Telco-Customer-Churn.csv")

# Convert 'TotalCharges' to numeric, coercing errors
client_data['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')

client_data

# Code snippet 15
# Predicting 'Avg Monthly Spend' for the client dataset
client_predictions = predict_model(best_model, client_data)

# Code snippet 16
# Predicting 'Avg Monthly Spend' for the client dataset
client_predictions = predict_model(best_model, client_data)


# Renaming label as Predicted 'Avg Monthly Spend' and rounding it to 2 decimals
client_predictions = client_predictions.rename(columns = {'Label':'eBook Subscriber Flag'}).round(2)


# Exporting 'Avg Monthly Spend' predictions to a csv file
client_predictions.to_csv('LR Final Avg Monthly Spend Telco Prediction.csv')

#code snippet 17
# getting the parameter for the Regression ML model
best_model_params = best_model.get_params()

#code snippet 18
#Print the Diccionary of Parameters
import pprint
pprint.pprint(best_model_params)